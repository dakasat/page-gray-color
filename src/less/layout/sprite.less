/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@s-flag-name: 's-flag';
@s-flag-x: 70px;
@s-flag-y: 36px;
@s-flag-offset-x: -70px;
@s-flag-offset-y: -36px;
@s-flag-width: 9px;
@s-flag-height: 10px;
@s-flag-total-width: 86px;
@s-flag-total-height: 60px;
@s-flag-image: '../img/sprite-030440485010684815.png';
@s-flag: 70px 36px -70px -36px 9px 10px 86px 60px '../img/sprite-030440485010684815.png' 's-flag';
@s-p-fb-name: 's-p-fb';
@s-p-fb-x: 70px;
@s-p-fb-y: 0px;
@s-p-fb-offset-x: -70px;
@s-p-fb-offset-y: 0px;
@s-p-fb-width: 16px;
@s-p-fb-height: 32px;
@s-p-fb-total-width: 86px;
@s-p-fb-total-height: 60px;
@s-p-fb-image: '../img/sprite-030440485010684815.png';
@s-p-fb: 70px 0px -70px 0px 16px 32px 86px 60px '../img/sprite-030440485010684815.png' 's-p-fb';
@s-p-gp-name: 's-p-gp';
@s-p-gp-x: 0px;
@s-p-gp-y: 0px;
@s-p-gp-offset-x: 0px;
@s-p-gp-offset-y: 0px;
@s-p-gp-width: 32px;
@s-p-gp-height: 32px;
@s-p-gp-total-width: 86px;
@s-p-gp-total-height: 60px;
@s-p-gp-image: '../img/sprite-030440485010684815.png';
@s-p-gp: 0px 0px 0px 0px 32px 32px 86px 60px '../img/sprite-030440485010684815.png' 's-p-gp';
@s-p-mail-name: 's-p-mail';
@s-p-mail-x: 0px;
@s-p-mail-y: 36px;
@s-p-mail-offset-x: 0px;
@s-p-mail-offset-y: -36px;
@s-p-mail-width: 32px;
@s-p-mail-height: 24px;
@s-p-mail-total-width: 86px;
@s-p-mail-total-height: 60px;
@s-p-mail-image: '../img/sprite-030440485010684815.png';
@s-p-mail: 0px 36px 0px -36px 32px 24px 86px 60px '../img/sprite-030440485010684815.png' 's-p-mail';
@s-p-tw-name: 's-p-tw';
@s-p-tw-x: 36px;
@s-p-tw-y: 0px;
@s-p-tw-offset-x: -36px;
@s-p-tw-offset-y: 0px;
@s-p-tw-width: 30px;
@s-p-tw-height: 26px;
@s-p-tw-total-width: 86px;
@s-p-tw-total-height: 60px;
@s-p-tw-image: '../img/sprite-030440485010684815.png';
@s-p-tw: 36px 0px -36px 0px 30px 26px 86px 60px '../img/sprite-030440485010684815.png' 's-p-tw';
@spritesheet-width: 86px;
@spritesheet-height: 60px;
@spritesheet-image: '../img/sprite-030440485010684815.png';
@spritesheet-sprites: @s-flag @s-p-fb @s-p-gp @s-p-mail @s-p-tw;
@spritesheet: 86px 60px '../img/sprite-030440485010684815.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
